// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;


/**
 * Importando a biblioteca 'ERC1155LazyMint' da 'ThirdWeb.
 */
import "@thirdweb-dev/contracts/base/ERC1155LazyMint.sol";

/**
 * @title SLB Resende-RJ
 * @dev herda e utiliza o `ERC1155LazyMint` no nosso contrato inteligente
 *  
 */
contract SLBResende is ERC1155LazyMint{ 
    // Número total de NFTs por coleção de pacotes
    uint256[] private supplies = [2000000,2000000];
    // Número total de NFTs cunhados
    uint256[] private minted = [0,0];

    // mapeamento aninhado para verificar se o usuário pode criar apenas um NFT por coleção de NFT
    mapping(uint256 => mapping(address => bool)) public member;

    /**
     * @dev O construtor da biblioteca ERC1155LazyMint leva quatro Parâmetros
     * _name of the NFT, _symbol do NFT,
     *  _royaltyRecipient (endereço) quem receberá royalties na venda secundária, _royaltyBps (porcentagem de royality)
     * não precisamos definir Royality para o propósito de nosso contrato inteligente. definir _royaltyBps como Zero
     * @param _name: nome de toda a coleção de pacotes NFT
     * @param _symbol: símbolo de toda a coleção de pacotes NFT
     */
    constructor(
        string memory _name,
        string memory _symbol
    ) ERC1155LazyMint (_name, _symbol, msg.sender, 0){}


    /**
     * @dev Cunha NFT e também verifica várias condições
     * 1. Um usuário pode cunhar apenas um NFT por coleção de pacotes
     * 2. Dá erro se _tokenId estiver errado
     * 3. Verifica e dá erro se todos os NFTs forem cunhados
     * 
     * @param _tokenId da coleção do pacote NFT 
     */
    function mintNFT(uint256 _tokenId) 
        external
        {
         require(
            !member[_tokenId][msg.sender],
            "Voce ja reivindicou este NFT."
        );    
        require(_tokenId <= supplies.length-1,"O NFT nao existe");
        uint256 index = _tokenId;

        require (minted[index] + 1 <= supplies[index], "Todos os NFT foram cunhados");
        _mint(msg.sender, _tokenId, 1, "");
        // "" são dados que são colocados vazios
        minted[index] += 1;
        member[_tokenId][msg.sender] = true;
    }

    /**
     * @dev Dá o número total de NFTs cunhados por coleção de pacotes NFT
     * @param _tokenId da coleção do pacote NFT 
     */
    function totalNftMinted(uint256 _tokenId) public view returns(uint256){
        return minted[_tokenId];
    }
}
